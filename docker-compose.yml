services:
  postgres:
    image: postgres:15
    container_name: db_postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pg_data:/var/lib/postgresql/data
    ports:
      - "${DB_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 30s
      timeout: 10s
      retries: 5
    env_file:
      - .env

  backend:
    build: ./backend
    container_name: fastapi_backend
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      SECRET_KEY: ${SECRET_KEY}
    volumes:
      - ./backend:/app
    ports:
      - "${BACKEND_PORT:-8000}:8000"
    command: >
      bash -c "sleep 10 && alembic upgrade head &&
               uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload"
    env_file:
      - .env

  frontend:
    build: ./frontend
    container_name: astro_frontend
    ports:
      - "${FRONTEND_PORT:-4321}:4321"
    depends_on:
      - backend
    environment:
      PUBLIC_API_BASE: ${PUBLIC_API_URL}
    volumes:
      - ./frontend:/app
    working_dir: /app
    command: npm run dev -- --host 0.0.0.0 --port 4321
    env_file:
      - .env

volumes:
  pg_data:
